@model List<InvoiceModel>

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            @if (Model != null)
            {
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <table class="table table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Id</th>
                                        <th>Image</th>
                                        <th>Name Tour</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Thanh toán</th>
                                        <th>Hủy</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        decimal totalMoney = 0;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        if (item.Tour != null)
                                        {
                                            <tr>
                                                <td>@item.InvoiceId.Substring(0, 30)</td>
                                                <td><img src="https://localhost:44384/images/@item.Tour.Image" width="70" /> </td>
                                                <td>@item.Tour.Name</td>
                                                <td>@item.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</td>
                                                <td>@item.Quantity</td>
                                                @if (item.Status)
                                                {
                                                    <td><small>Đã thanh toán</small></td>
                                                    <td></td>
                                                }
                                                else
                                                {
                                                    <td><div id="paypal-button"></div></td>
                                                    <td><a class="btn btn-danger" href="/invoice/confirmdelete/@item.InvoiceId">Hủy</a></td>
                                                    totalMoney = totalMoney + (item.Price * item.Quantity);
                                                }

                                            </tr>

                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        @* the begin*@
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right">

                            @{
                                var result = @totalMoney / 23000;
                                <p style="font-size: 23px;">Tổng tiền thanh toán: <small id="total">@result.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-US"))</small></p>
                            }
                        </div>
                        <div></div>
                      
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right">
                            <div id="paypal-button"></div>
                        </div>
                  

                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>
    var result = document.getElementById("total").innerHTML;
    paypal.Button.render({
        // Configure environment
        env: 'sandbox',
        client: {
            sandbox: 'AQ0vdtbnYnilxGirwMwQ7nx3UuE-j5UCVhKz1dU8hm6apMn5QlJIYREUtRqpfBl_nrBiTvu7KaX8EI49',
            production: 'demo_production_client_id'
        },
        // Customize button (optional)
        locale: 'en_US',
        style: {
            size: 'small',
            color: 'gold',
            shape: 'pill',
        },

        // Enable Pay Now checkout flow (optional)
        commit: true,

        // Set up a payment
        payment: function (data, actions) {
            return actions.payment.create({
                transactions: [{
                    amount: {
                        total: '0.1',
                        currency: 'USD'
                    }
                }]
            });
        },
        // Execute the payment
        onAuthorize: function (data, actions) {
            return actions.payment.execute().then(function () {
                // Show a confirmation message to the buyer
                window.location.assign("/Invoice/Checkout?MemberId = " + "");
            });
        }
    }, '#paypal-button');

</script>
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
    <script>
        var result = document.getElementById("demo").innerHTML;
        paypal.Button.render({
            // Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AQ0vdtbnYnilxGirwMwQ7nx3UuE-j5UCVhKz1dU8hm6apMn5QlJIYREUtRqpfBl_nrBiTvu7KaX8EI49',
                production: 'demo_production_client_id'
            },
            // Customize button (optional)
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill',
            },

            // Enable Pay Now checkout flow (optional)
            commit: true,

            // Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: '',
                            currency: 'USD'
                        }
                    }]
                });
            },
            // Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    // Show a confirmation message to the buyer
                  window.location.assign("/Invoice/Checkout?MemberId = "+ "");
                });
            }
        }, '#paypal-button');

    </script>*@
